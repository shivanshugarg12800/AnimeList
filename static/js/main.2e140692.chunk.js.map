{"version":3,"sources":["components/Card.js","components/AllCards.js","redux/constants/action_types.js","redux/actions/actions.js","components/search.js","App.js","redux/reducers/Productreducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Card","visible","renderlist","useSelector","state","allAnimes","animes","slice","map","anime","image_url","title","mal_id","className","src","alt","AllCards","action_types","setAnimes","type","payload","Search","useState","searchItem","setSearchItem","url","setUrl","dispatch","useDispatch","FetchAnime","query","a","fetch","then","res","json","temp","results","console","log","onSubmit","e","preventDefault","placeholder","required","value","onChange","target","App","setVisible","onClick","prev","class","initialState","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAuBeA,EApBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAIRC,EAFSC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,UAE5BC,MAAM,EAAGN,GAASO,KAAI,SAACC,GAC/C,IAAQC,EAA6BD,EAA7BC,UAAWC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAC1B,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKC,IAAKJ,EAAWK,IAAKJ,MAE5B,qBAAKE,UAAU,OAAf,SACE,6BAAKF,QAL2BC,MAUxC,OAAO,mCAAGV,KCRGc,EARE,SAAC,GAAiB,IAAff,EAAc,EAAdA,QAClB,OACE,qBAAKY,UAAU,gBAAf,SACE,cAAC,EAAD,CAAMZ,QAASA,O,wBCPRgB,EACC,aCCDC,EAAY,SAACZ,GACxB,MAAO,CACLa,KAAMF,EACNG,QAASd,IC0CEe,EA5CA,WAEb,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAGMpB,EAASH,aAAY,SAACC,GAAD,OAAWA,KAEhCuB,EAAWC,cAUXC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACEC,MAAM,2CAAD,OACqBF,EADrB,MAEtBG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAHH,OACXC,EADW,OAKjBT,EAAST,EAAUkB,EAAKC,UALP,2CAAH,sDAQhB,OADAC,QAAQC,IAAI,iBAAkBjC,GAE5B,sBAAKO,UAAU,aAAf,UACE,sCACM,0CADN,UAGA,sBAAMA,UAAU,aAAa2B,SApBZ,SAACC,GACpBA,EAAEC,iBAEFb,EAAWN,GACXG,EAAO,2CAAD,OAA4CH,KAgBhD,SACE,uBACEJ,KAAK,SACLwB,YAAY,yBACZC,UAAQ,EACRC,MAAOtB,EACPuB,SAAU,SAACL,GAAD,OAAOjB,EAAciB,EAAEM,OAAOF,YAG5C,6CAAgBpB,SClBPuB,MApBf,WAEE,MAA8B1B,mBAAS,IAAvC,mBAAOrB,EAAP,KAAgBgD,EAAhB,KAOA,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUZ,QAASA,IACnB,wBAAQY,UAAU,MAAMqC,QARX,WACfD,GAAW,SAACE,GAAD,OAAUA,EAAO,MAO1B,SACE,mBAAGC,MAAM,sB,cCjBXC,EAAe,CACnB/C,OAAQ,ICAGgD,EAAWC,YAAgB,CACtClD,UDE0B,WAA8C,IAA7CD,EAA4C,uDAApCiD,EAAoC,yCAApBlC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzD,OAAQD,IACDF,EACI,2BAAKb,GAAZ,IAAmBE,OAAQc,IAGpBhB,KEHEoD,EANDC,YACZH,EACA,GACAI,OAAOC,8BAAgCD,OAAOC,gCCAhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.2e140692.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Card = ({ visible }) => {\r\n  // getting all the animes\r\n  const animes = useSelector((state) => state.allAnimes.animes);\r\n  // rendering the components\r\n  const renderlist = animes.slice(0, visible).map((anime) => {\r\n    const { image_url, title, mal_id } = anime;\r\n    return (\r\n      <div className=\"cardContainer\" key={mal_id}>\r\n        <div className=\"imgContainer\">\r\n          <img src={image_url} alt={title} />\r\n        </div>\r\n        <div className=\"text\">\r\n          <h1>{title}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return <>{renderlist}</>;\r\n};\r\n\r\nexport default Card;\r\n","import { React } from \"react\";\r\nimport Card from \"./Card\";\r\n// import axios from \"axios\";\r\n// import { setAnimes } from \"../redux/actions/actions\";\r\nconst AllCards = ({ visible }) => {\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Card visible={visible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllCards;\r\n","export const action_types = {\r\n  SET_ANIMES: \"SET_ANIMES\",\r\n};\r\n","import { action_types } from \"../constants/action_types\";\r\n\r\nexport const setAnimes = (animes) => {\r\n  return {\r\n    type: action_types.SET_ANIMES,\r\n    payload: animes,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAnimes } from \"../redux/actions/actions\";\r\nconst Search = () => {\r\n  // states\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  // getting all the animes\r\n\r\n  const animes = useSelector((state) => state);\r\n  // calling the dispatch instant\r\n  const dispatch = useDispatch();\r\n\r\n  // FUNCTIONS.................\r\n  const HandleSearch = (e) => {\r\n    e.preventDefault();\r\n\r\n    FetchAnime(searchItem);\r\n    setUrl(`https://api.jikan.moe/v3/search/anime?q=${searchItem}`);\r\n  };\r\n\r\n  const FetchAnime = async (query) => {\r\n    const temp = await fetch(\r\n      `https://api.jikan.moe/v3/search/anime?q=${query}}`\r\n    ).then((res) => res.json());\r\n\r\n    dispatch(setAnimes(temp.results));\r\n  };\r\n  console.log(\"ALL THE ANIMES\", animes);\r\n  return (\r\n    <div className=\"searchComp\">\r\n      <h1>\r\n        The <span>Anime </span>List\r\n      </h1>\r\n      <form className=\"search-box\" onSubmit={HandleSearch}>\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Search for an anime...\"\r\n          required\r\n          value={searchItem}\r\n          onChange={(e) => setSearchItem(e.target.value)}\r\n        />\r\n      </form>\r\n      <h4>API Call : {url}</h4>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport AllCards from \"./components/AllCards\";\nimport Search from \"./components/search\";\n\nfunction App() {\n  // states\n  const [visible, setVisible] = useState(12);\n\n  // functions\n  const loadMore = () => {\n    setVisible((prev) => prev + 4);\n  };\n\n  return (\n    <div className=\"App\">\n      <Search />\n      <AllCards visible={visible} />\n      <button className=\"btn\" onClick={loadMore}>\n        <i class=\"fas fa-plus\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n// https://api.jikan.moe/v3/search/anime?q=naruto&limit=16\n","import { action_types } from \"../constants/action_types\";\r\n\r\nconst initialState = {\r\n  animes: [],\r\n};\r\n\r\nexport const animeReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case action_types.SET_ANIMES:\r\n      return { ...state, animes: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { animeReducer } from \"./Productreducer\";\r\n\r\nexport const reducers = combineReducers({\r\n  allAnimes: animeReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { reducers } from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}