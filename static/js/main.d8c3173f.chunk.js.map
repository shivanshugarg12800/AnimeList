{"version":3,"sources":["components/Card.js","redux/constants/action_types.js","redux/actions/actions.js","components/AllCards.js","components/search.js","App.js","redux/reducers/Productreducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Card","filteredAnimes","visible","animes","useSelector","state","allAnimes","renderlist","length","slice","map","anime","image_url","title","mal_id","className","src","alt","action_types","setAnimes","type","payload","AllCards","dispatch","useDispatch","fetchData","a","axios","get","catch","err","console","log","response","data","results","useEffect","Search","setFilteredAnimes","useState","searchItem","setSearchItem","filterAnime","newAnimes","filter","toLowerCase","includes","placeholder","onChange","e","target","value","onKeyDown","code","onClick","App","setVisible","prev","class","initialState","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAyBeA,EAtBF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QAExBC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUH,UAEhDI,GAAwC,IAA1BN,EAAeO,OAAeL,EAASF,GACxDQ,MAAM,EAAGP,GACTQ,KAAI,SAACC,GACJ,IAAQC,EAA6BD,EAA7BC,UAAWC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAC1B,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKC,IAAKJ,EAAWK,IAAKJ,MAE5B,qBAAKE,UAAU,OAAf,SACE,6BAAKF,QAL2BC,MAU1C,OAAO,mCAAGP,K,iBCtBCW,EACC,aCCDC,EAAY,SAAChB,GACxB,MAAO,CACLiB,KAAMF,EACNG,QAASlB,ICwBEmB,EAxBE,SAAC,GAAiC,IAA/BrB,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,QAC5BC,EAASC,aAAY,SAACC,GAAD,OAAWA,KAChCkB,EAAWC,cAEXC,EAAS,uCAAG,4BAAAC,EAAA,sEACOC,IACpBC,IAAI,2DACJC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAJA,OACVG,EADU,OAMhBV,EAASJ,EAAUc,EAASC,KAAKC,UANjB,2CAAH,qDAaf,OALAC,qBAAU,WACRX,MACC,IAEHM,QAAQC,IAAI,iBAAkB7B,GAE5B,qBAAKY,UAAU,gBAAf,SACE,cAAC,EAAD,CAAMd,eAAgBA,EAAgBC,QAASA,OCatCmC,EAlCA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAEVnC,EAASC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUH,UAEtD,EAAoCoC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WAClB,IAAMC,EAAYxC,EAAOyC,QAAO,SAACjC,GAC/B,OAAIA,EAAME,MAAMgC,cAAcC,SAASN,EAAWK,gBAE1B,KAAfL,EADA7B,OACJ,KAEP2B,EAAkBK,IAGpB,OACE,sBAAK5B,UAAU,aAAf,UACE,sCACM,0CADN,UAGA,uBACEK,KAAK,OACL2B,YAAY,WACZC,SAAU,SAACC,GAAD,OAAOR,EAAcQ,EAAEC,OAAOC,QACxCC,UAAW,SAACH,GACK,UAAXA,EAAEI,MAAkBX,OAG5B,wBAAQ3B,UAAU,OAAOuC,QAASZ,EAAlC,wBCHSa,MAvBf,WAEE,MAA4ChB,mBAAS,IAArD,mBAAOtC,EAAP,KAAuBqC,EAAvB,KACA,EAA8BC,mBAAS,IAAvC,mBAAOrC,EAAP,KAAgBsD,EAAhB,KAMA,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,CACEd,eAAgBA,EAChBqC,kBAAmBA,IAErB,cAAC,EAAD,CAAUrC,eAAgBA,EAAgBC,QAASA,IACnD,wBAAQa,UAAU,MAAMuC,QAVX,WACfE,GAAW,SAACC,GAAD,OAAUA,EAAO,MAS1B,SACE,mBAAGC,MAAM,sB,eCpBXC,EAAe,CACnBxD,OAAQ,ICAGyD,EAAWC,YAAgB,CACtCvD,UDE0B,WAA8C,IAA7CD,EAA4C,uDAApCsD,EAAoC,yCAApBvC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzD,OAAQD,IACDF,EACI,2BAAKb,GAAZ,IAAmBF,OAAQkB,IAGpBhB,KEHEyD,EANDC,YACZH,EACA,GACAI,OAAOC,8BAAgCD,OAAOC,gCCAhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.d8c3173f.chunk.js","sourcesContent":["import { React } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Card = ({ filteredAnimes, visible }) => {\r\n  // getting all the animes\r\n  const animes = useSelector((state) => state.allAnimes.animes);\r\n  // rendering the components\r\n  const renderlist = (filteredAnimes.length === 0 ? animes : filteredAnimes)\r\n    .slice(0, visible)\r\n    .map((anime) => {\r\n      const { image_url, title, mal_id } = anime;\r\n      return (\r\n        <div className=\"cardContainer\" key={mal_id}>\r\n          <div className=\"imgContainer\">\r\n            <img src={image_url} alt={title} />\r\n          </div>\r\n          <div className=\"text\">\r\n            <h1>{title}</h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  return <>{renderlist}</>;\r\n};\r\n\r\nexport default Card;\r\n","export const action_types = {\r\n  SET_ANIMES: \"SET_ANIMES\",\r\n};\r\n","import { action_types } from \"../constants/action_types\";\r\n\r\nexport const setAnimes = (animes) => {\r\n  return {\r\n    type: action_types.SET_ANIMES,\r\n    payload: animes,\r\n  };\r\n};\r\n","import { React, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"./Card\";\r\nimport axios from \"axios\";\r\nimport { setAnimes } from \"../redux/actions/actions\";\r\nconst AllCards = ({ filteredAnimes, visible }) => {\r\n  const animes = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchData = async () => {\r\n    const response = await axios\r\n      .get(\"https://api.jikan.moe/v3/search/anime?q=naruto&limit=20\")\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    dispatch(setAnimes(response.data.results));\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(\"ALL THE ANIMES\", animes);\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Card filteredAnimes={filteredAnimes} visible={visible} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllCards;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Search = ({ setFilteredAnimes }) => {\r\n  // getting all the animes\r\n  const animes = useSelector((state) => state.allAnimes.animes);\r\n  // states\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  // function to filterAnime\r\n  const filterAnime = () => {\r\n    const newAnimes = animes.filter((anime) => {\r\n      if (anime.title.toLowerCase().includes(searchItem.toLowerCase()))\r\n        return anime;\r\n      else if (searchItem === \"\") return anime;\r\n    });\r\n    setFilteredAnimes(newAnimes);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchComp\">\r\n      <h1>\r\n        The <span>Anime </span>List\r\n      </h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search..\"\r\n        onChange={(e) => setSearchItem(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.code === \"Enter\") filterAnime();\r\n        }}\r\n      ></input>\r\n      <button className=\"btn2\" onClick={filterAnime}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport AllCards from \"./components/AllCards\";\nimport Search from \"./components/search\";\n\nfunction App() {\n  // states\n  const [filteredAnimes, setFilteredAnimes] = useState([]);\n  const [visible, setVisible] = useState(12);\n\n  // functions\n  const loadMore = () => {\n    setVisible((prev) => prev + 4);\n  };\n  return (\n    <div className=\"App\">\n      <Search\n        filteredAnimes={filteredAnimes}\n        setFilteredAnimes={setFilteredAnimes}\n      />\n      <AllCards filteredAnimes={filteredAnimes} visible={visible} />\n      <button className=\"btn\" onClick={loadMore}>\n        <i class=\"fas fa-plus\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n// https://api.jikan.moe/v3/search/anime?q=naruto&limit=16\n","import { action_types } from \"../constants/action_types\";\r\n\r\nconst initialState = {\r\n  animes: [],\r\n};\r\n\r\nexport const animeReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case action_types.SET_ANIMES:\r\n      return { ...state, animes: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { animeReducer } from \"./Productreducer\";\r\n\r\nexport const reducers = combineReducers({\r\n  allAnimes: animeReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { reducers } from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}